// <auto-generated />
using System;
using Coling.API.Afiliados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coling.API.Afiliados.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240313185344_Primero-Afiliados")]
    partial class PrimeroAfiliados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Coling.Shared.Models.Afiliado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigoafiliado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codigoafiliado");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Fechaafiliacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaafiliacion");

                    b.Property<int>("Idpersona")
                        .HasColumnType("int")
                        .HasColumnName("idpersona");

                    b.Property<string>("Nrotituloprovisional")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nrotituloprovisional");

                    b.HasKey("Id");

                    b.HasIndex("Idpersona");

                    b.ToTable("afiliado");
                });

            modelBuilder.Entity("Coling.Shared.Models.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<int>("Idpersona")
                        .HasColumnType("int")
                        .HasColumnName("idpersona");

                    b.HasKey("Id");

                    b.HasIndex("Idpersona");

                    b.ToTable("direccion");
                });

            modelBuilder.Entity("Coling.Shared.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ci");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaNacimiento");

                    b.Property<byte[]>("Foto")
                        .HasMaxLength(1)
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("foto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("Coling.Shared.Models.PersonatipoSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<int>("Idpersona")
                        .HasColumnType("int")
                        .HasColumnName("idpersona");

                    b.Property<int>("Idtiposocial")
                        .HasColumnType("int")
                        .HasColumnName("idtiposocial");

                    b.HasKey("Id");

                    b.HasIndex("Idpersona");

                    b.HasIndex("Idtiposocial");

                    b.ToTable("personatipoSocial");
                });

            modelBuilder.Entity("Coling.Shared.Models.Profesionafiliado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Fechaasignacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaasignacion");

                    b.Property<int>("Idafiliado")
                        .HasColumnType("int")
                        .HasColumnName("idafiliado");

                    b.Property<int>("Idprofesion")
                        .HasColumnType("int")
                        .HasColumnName("idprofesion");

                    b.Property<string>("Nrosellosib")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("nrosellosib");

                    b.HasKey("Id");

                    b.HasIndex("Idafiliado");

                    b.ToTable("profesionafiliado");
                });

            modelBuilder.Entity("Coling.Shared.Models.Telefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<int>("Idpersona")
                        .HasColumnType("int")
                        .HasColumnName("idpersona");

                    b.Property<string>("Nrotelefono")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("nrotelefono");

                    b.HasKey("Id");

                    b.HasIndex("Idpersona");

                    b.ToTable("telefono");
                });

            modelBuilder.Entity("Coling.Shared.Models.TipoSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<string>("Nombresocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombresocial");

                    b.HasKey("Id");

                    b.ToTable("tipoSocial");
                });

            modelBuilder.Entity("Coling.Shared.Models.Afiliado", b =>
                {
                    b.HasOne("Coling.Shared.Models.Persona", "IdpersonaNavigation")
                        .WithMany("Afiliados")
                        .HasForeignKey("Idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdpersonaNavigation");
                });

            modelBuilder.Entity("Coling.Shared.Models.Direccion", b =>
                {
                    b.HasOne("Coling.Shared.Models.Persona", "IdpersonaNavigation")
                        .WithMany("Direcciones")
                        .HasForeignKey("Idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdpersonaNavigation");
                });

            modelBuilder.Entity("Coling.Shared.Models.PersonatipoSocial", b =>
                {
                    b.HasOne("Coling.Shared.Models.Persona", "IdpersonaNavigation")
                        .WithMany("PersonatipoSociales")
                        .HasForeignKey("Idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coling.Shared.Models.TipoSocial", "IdtiposocialNavigation")
                        .WithMany("PersonatipoSociales")
                        .HasForeignKey("Idtiposocial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdpersonaNavigation");

                    b.Navigation("IdtiposocialNavigation");
                });

            modelBuilder.Entity("Coling.Shared.Models.Profesionafiliado", b =>
                {
                    b.HasOne("Coling.Shared.Models.Afiliado", "IdafiliadoNavigation")
                        .WithMany("Profesionafiliados")
                        .HasForeignKey("Idafiliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdafiliadoNavigation");
                });

            modelBuilder.Entity("Coling.Shared.Models.Telefono", b =>
                {
                    b.HasOne("Coling.Shared.Models.Persona", "IdpersonaNavigation")
                        .WithMany("Telefonos")
                        .HasForeignKey("Idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdpersonaNavigation");
                });

            modelBuilder.Entity("Coling.Shared.Models.Afiliado", b =>
                {
                    b.Navigation("Profesionafiliados");
                });

            modelBuilder.Entity("Coling.Shared.Models.Persona", b =>
                {
                    b.Navigation("Afiliados");

                    b.Navigation("Direcciones");

                    b.Navigation("PersonatipoSociales");

                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("Coling.Shared.Models.TipoSocial", b =>
                {
                    b.Navigation("PersonatipoSociales");
                });
#pragma warning restore 612, 618
        }
    }
}
